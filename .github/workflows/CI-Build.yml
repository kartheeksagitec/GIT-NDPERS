name: CI - Build & Publish All Projects

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build & Publish All Projects
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Build All Projects (Release)
      shell: pwsh
      run: |
        $projects = @(
          "slnNeoSpin/NeoSpinBatch/NeoSpinBatch.csproj",
          "slnNeoSpin/NeoSpinBPMEngine/NeoSpinBPMEngine.csproj",
          "slnNeoSpin/NeoSpinBusinessObjects/NeoSpinBusinessObjects.csproj",
          "slnNeoSpin/NeoSpinBusinessTier/NeoSpinBusinessTier.csproj",
          "slnNeoSpin/NeoSpinCommon/NeoSpinCommon.csproj",
          "slnNeoSpin/NeoSpinESS/NeoSpinESS.csproj",
          "slnNeoSpin/NeoSpinMSS/NeoSpinMSS.csproj",
          "slnNeoSpin/NeoSpinInterface/NeoSpinInterface.csproj",
          "slnNeoSpin/NeospinWebClientMVVM/NeospinWebClientMVVM.csproj"
        )

        foreach ($proj in $projects) {
          Write-Host "Building project: $proj"
          msbuild $proj /t:Rebuild /p:Configuration=Release /m
        }

    - name: Prepare Artifact Folder
      shell: pwsh
      run: |
        $staging = "${{ runner.temp }}\NeoSpin_Build"
        if (Test-Path $staging) { Remove-Item $staging -Recurse -Force }
        New-Item -ItemType Directory -Path $staging | Out-Null

        # Collect only DLLs & EXEs
        Get-ChildItem -Path "${{ github.workspace }}" -Recurse -Include *.dll,*.exe |
        ForEach-Object {
          $target = Join-Path $staging $_.Name
          Copy-Item $_.FullName $target -Force
        }
        Write-Host "Artifacts collected at $staging"

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Build-All-Projects
        path: ${{ runner.temp }}/NeoSpin_Build
        if-no-files-found: error
